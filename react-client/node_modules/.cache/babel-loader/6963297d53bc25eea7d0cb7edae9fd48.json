{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development-X220\\\\NODEJS\\\\submit\\\\react-client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './ClientMain';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  // Now we want to put a border around the frame \n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Spinner, {\n      message: \"Loading ... Please \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"border red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["C:\\Development-X220\\NODEJS\\submit\\react-client\\src\\index.js"],"names":["React","ReactDOM","SeasonDisplay","Spinner","App","Component","state","lat","errorMessage","renderContent","render","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AAAEC,MAAAA,GAAG,EAAE,IAAP;AAAcC,MAAAA,YAAY,EAAE;AAA5B,KAFsB;AAAA;;AAG9B;AACAC,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKH,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC5C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACF;;AAED,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAA+C;AAC5C,aAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;;AAED,WAAO,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,aAAL,EADL,CADJ;AAKH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACKC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAACV,MAAAA,GAAG,EAAES,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,KAAd,CADlB,EAEKC,GAAD,IAAS,KAAKH,QAAL,CAAc;AAACT,MAAAA,YAAY,EAAEY,GAAG,CAACC;AAAnB,KAAd,CAFb;AAIH;;AA7B6B;;AAgClCpB,QAAQ,CAACS,MAAT,CACQ,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADR,EAEQY,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAFR","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SeasonDisplay from './ClientMain';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = { lat: null , errorMessage: ''};\r\n    // Now we want to put a border around the frame \r\n    renderContent() {\r\n        if (this.state.errorMessage && !this.state.lat) {\r\n            return <div>Error: {this.state.errorMessage}</div>\r\n         }\r\n \r\n         if (!this.state.errorMessage && this.state.lat){     \r\n            return <SeasonDisplay lat={this.state.lat}/>          \r\n         }\r\n \r\n         return <Spinner message=\"Loading ... Please \" />;\r\n    }\r\n\r\n    render() {        \r\n        return (\r\n            <div className=\"border red\">\r\n                {this.renderContent()}\r\n            </div>\r\n        );   \r\n    }\r\n\r\n    componentDidMount() {\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => this.setState({lat: position.coords.latitude}) , \r\n            (err) => this.setState({errorMessage: err.message})            \r\n        );\r\n    }  \r\n}\r\n\r\nReactDOM.render(\r\n        <App /> , \r\n        document.querySelector('#root')\r\n);"]},"metadata":{},"sourceType":"module"}