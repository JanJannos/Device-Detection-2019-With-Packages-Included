{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development-X220\\\\NODEJS\\\\submit\\\\react-client\\\\src\\\\ServerResponses.js\";\nimport React from \"react\";\nimport Spinner from \"./Spinner\";\nimport \"./styles.css\";\nexport default class ServerResponses extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    this.props.clientMainCallback(true);\n  }\n\n  getNoDataMessage() {\n    if (this.props.listOfResponses && this.props.listOfResponses.length <= 0) {\n      return React.createElement(Spinner, {\n        message: \"No Data ! Wating for Server ...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    const divItems = this.props.listOfResponses.map((item, index) => React.createElement(\"li\", {\n      key: index + item.productId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Action Type : \", item.actionType), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Device Name : \", item.deviceName), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Manufacturer : \", item.manufacturer), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Product Id : \", item.productId), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Vendor Id : \", item.vendorId), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.getNoDataMessage(), React.createElement(\"div\", {\n      className: \"scrollingLimit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, divItems)));\n  }\n\n}","map":{"version":3,"sources":["C:\\Development-X220\\NODEJS\\submit\\react-client\\src\\ServerResponses.js"],"names":["React","Spinner","ServerResponses","Component","constructor","props","componentDidUpdate","clientMainCallback","getNoDataMessage","listOfResponses","length","render","divItems","map","item","index","productId","actionType","deviceName","manufacturer","vendorId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,cAAP;AAEA,eAAe,MAAMC,eAAN,SAA8BF,KAAK,CAACG,SAApC,CAA8C;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKD,KAAL,CAAWE,kBAAX,CAA8B,IAA9B;AACD;;AAEDC,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKH,KAAL,CAAWI,eAAX,IAA8B,KAAKJ,KAAL,CAAWI,eAAX,CAA2BC,MAA3B,IAAqC,CAAvE,EAA0E;AACxE,aAAO,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWI,eAAX,CAA2BI,GAA3B,CAA+B,CAACC,IAAD,EAAOC,KAAP,KAC9C;AAAI,MAAA,GAAG,EAAEA,KAAK,GAAGD,IAAI,CAACE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBF,IAAI,CAACG,UAAxB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmBH,IAAI,CAACI,UAAxB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoBJ,IAAI,CAACK,YAAzB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBL,IAAI,CAACE,SAAvB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBF,IAAI,CAACM,QAAtB,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADe,CAAjB;AAaA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKZ,gBAAL,EADH,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,QAAL,CAFF,CAFF,CADF;AAUD;;AAvC0D","sourcesContent":["import React from \"react\";\r\nimport Spinner from \"./Spinner\";\r\nimport \"./styles.css\";\r\n  \r\nexport default class ServerResponses extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.clientMainCallback(true);\r\n  }\r\n\r\n  getNoDataMessage() {\r\n    if (this.props.listOfResponses && this.props.listOfResponses.length <= 0) {\r\n      return <Spinner message=\"No Data ! Wating for Server ...\" />;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const divItems = this.props.listOfResponses.map((item, index) => (\r\n      <li key={index + item.productId}>\r\n        <ul>\r\n          <li>Action Type : {item.actionType}</li>\r\n          <li>Device Name : {item.deviceName}</li>\r\n          <li>Manufacturer : {item.manufacturer}</li>\r\n          <li>Product Id : {item.productId}</li>\r\n          <li>Vendor Id : {item.vendorId}</li>\r\n          <br />\r\n        </ul>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        {this.getNoDataMessage()}\r\n        <div className=\"scrollingLimit\">\r\n          {/* <Typography component={'span'} variant={'body2'}> */}\r\n          <ul>{divItems}</ul>\r\n          {/* </Typography> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}