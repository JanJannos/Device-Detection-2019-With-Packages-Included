{"ast":null,"code":"var _jsxFileName = \"C:\\\\Development-X220\\\\NODEJS\\\\submit\\\\react-client\\\\src\\\\ConnectServer.js\";\nimport React from \"react\"; // import { Button, ButtonToolbar } from \"react-bootstrap\";\n\nimport \"./styles.css\";\n\nconst validateURL = str => {\n  var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n\n  if (!regex.test(str)) {\n    alert(\"Please enter valid URL.\");\n    return false;\n  }\n\n  return true;\n};\n\nconst validatePort = port => {\n  if (isNaN(port)) {\n    alert(\"Please enter a valid Port!\");\n    return false;\n  }\n\n  return true;\n};\n\nconst validateInput = (ipAddress, port) => {\n  // true means invalid, so our conditions got reversed\n  return {\n    // ipAddress: ipAddress.length === 0 || !validateURL(ipAddress),\n    ipAddress: ipAddress.length === 0,\n    port: port.length === 0 || !validatePort(port)\n  };\n};\n\nexport default class ConnectServer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddressChange = evt => {\n      this.setState({\n        ipAddress: evt.target.value\n      });\n    };\n\n    this.handlePasswordChange = evt => {\n      this.setState({\n        port: evt.target.value\n      });\n    };\n\n    this.handleSubmit = evt => {\n      if (!this.canBeSubmitted() || !validateURL(ipAddress)) {\n        evt.preventDefault();\n        return;\n      }\n\n      const _this$state = this.state,\n            ipAddress = _this$state.ipAddress,\n            port = _this$state.port;\n      const info = {\n        ip: ipAddress,\n        port: port\n      };\n\n      const _info = JSON.stringify(info);\n\n      this.props.clientMainCallback(_info);\n    };\n\n    this.state = {\n      ipAddress: \"\",\n      port: \"\",\n      everFocusedEmail: false,\n      everFocusedPassword: false,\n      inFocus: \"\"\n    };\n  }\n\n  canBeSubmitted() {\n    const errors = validateInput(this.state.ipAddress, this.state.port);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    return !isDisabled;\n  }\n\n  render() {\n    const errors = validateInput(this.state.ipAddress, this.state.port);\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Connect To Server\"), React.createElement(\"input\", {\n      className: errors.ipAddress ? \"error\" : \"\",\n      type: \"text\",\n      placeholder: \"Address\",\n      value: this.state.ipAddress,\n      onChange: this.handleAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: errors.port ? \"error\" : \"\",\n      type: \"port\",\n      placeholder: \"Port\",\n      value: this.state.port,\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: isDisabled,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Connect\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\Development-X220\\NODEJS\\submit\\react-client\\src\\ConnectServer.js"],"names":["React","validateURL","str","regex","test","alert","validatePort","port","isNaN","validateInput","ipAddress","length","ConnectServer","Component","constructor","props","handleAddressChange","evt","setState","target","value","handlePasswordChange","handleSubmit","canBeSubmitted","preventDefault","state","info","ip","_info","JSON","stringify","clientMainCallback","everFocusedEmail","everFocusedPassword","inFocus","errors","isDisabled","Object","keys","some","x","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// import { Button, ButtonToolbar } from \"react-bootstrap\";\r\nimport \"./styles.css\";\r\n\r\nconst validateURL = str => {\r\n  var regex = /(http|https):\\/\\/(\\w+:{0,1}\\w*)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\r\n  if (!regex.test(str)) {\r\n    alert(\"Please enter valid URL.\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst validatePort = port => {\r\n  if (isNaN(port)) {\r\n    alert(\"Please enter a valid Port!\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nconst validateInput = (ipAddress, port) => {\r\n  // true means invalid, so our conditions got reversed\r\n  return {\r\n    // ipAddress: ipAddress.length === 0 || !validateURL(ipAddress),\r\n    ipAddress: ipAddress.length === 0 ,\r\n    port: port.length === 0 || !validatePort(port)\r\n  };\r\n};\r\n\r\nexport default class ConnectServer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ipAddress: \"\",\r\n      port: \"\",\r\n      everFocusedEmail: false,\r\n      everFocusedPassword: false,\r\n      inFocus: \"\"\r\n    };\r\n  }\r\n\r\n  handleAddressChange = evt => {\r\n    this.setState({ ipAddress: evt.target.value });\r\n  };\r\n\r\n  handlePasswordChange = evt => {\r\n    this.setState({ port: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = evt => {    \r\n    if (!this.canBeSubmitted() || !validateURL(ipAddress)) {\r\n      evt.preventDefault();\r\n      return;\r\n    }\r\n    const { ipAddress, port } = this.state;\r\n    const info = {\r\n      ip: ipAddress,\r\n      port: port\r\n    };\r\n\r\n    const _info = JSON.stringify(info);\r\n    this.props.clientMainCallback(_info);\r\n  };\r\n\r\n  canBeSubmitted() {\r\n    const errors = validateInput(this.state.ipAddress, this.state.port);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    return !isDisabled;\r\n  }\r\n\r\n  render() {\r\n    const errors = validateInput(this.state.ipAddress, this.state.port);\r\n    const isDisabled = Object.keys(errors).some(x => errors[x]);\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h1>Connect To Server</h1>        \r\n        <input\r\n          className={errors.ipAddress ? \"error\" : \"\"}\r\n          type=\"text\"\r\n          placeholder=\"Address\"\r\n          value={this.state.ipAddress}\r\n          onChange={this.handleAddressChange}\r\n        />\r\n        <input\r\n          className={errors.port ? \"error\" : \"\"}\r\n          type=\"port\"\r\n          placeholder=\"Port\"\r\n          value={this.state.port}\r\n          onChange={this.handlePasswordChange}\r\n        />\r\n        <button disabled={isDisabled}>Connect</button>\r\n        {/* <ButtonToolbar>\r\n            <Button disabled={isDisabled} variant=\"outline-primary\"  onClick={this.handleSubmit}>Connect</Button>\r\n        </ButtonToolbar> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}